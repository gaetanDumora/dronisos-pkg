services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: always
    container_name: rabbitmq
    ports:
      # ui
      - 15672:15672
      # - 5672:5672
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q ping",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - /var/lib/rabbitmq/
      - /var/log/rabbitmq

  postgres:
    image: postgres
    restart: always
    container_name: postgres
    shm_size: 128mb
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=dronisos
      - POSTGRES_PASSWORD=dronisos
      - POSTGRES_DB=dronisos
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U dronisos -d dronisos'"]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - /var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d/

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=dronisos@dronisos.com
      - PGADMIN_DEFAULT_PASSWORD=dronisos
    ports:
      - 5555:80

  backend:
    container_name: backend
    build:
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - 41234:41234/udp # udp
      - 3000:3000 # Api
    environment:
      - TCP_HOST=0.0.0.0
      - UDP_HOST=0.0.0.0
      - RABBIT_MQ_URL=amqp://rabbitmq:5672
      - DATABASE_URL=postgresql://dronisos:dronisos@postgres:5432/dronisos
